{"version":3,"sources":["components/Navbar.js","components/Footbar.js","components/screens/Home.js","components/screens/Profile.js","components/screens/Signin.js","components/screens/Signup.js","components/screens/CreatePost.js","reducers/userReducer.js","components/screens/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","style","marginRight","onClick","localStorage","clear","type","push","Footbar","margin","textAlign","Home","useState","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","posts","map","item","postedBy","_id","name","float","postid","method","console","log","newData","filter","src","photo","color","likes","includes","body","JSON","stringify","postId","title","catch","err","length","comments","record","key","fontWeight","text","onSubmit","e","preventDefault","target","value","placeholder","Profile","mypics","setPics","mypost","maxWidth","display","justifyContent","paddingBottom","borderBottom","width","height","borderRadius","pic","followers","following","marginBottom","alt","Signin","email","setEmail","password","setPassword","onChange","error","M","toast","html","classes","setItem","token","user","payload","Signup","setName","image","setImage","undefined","url","setUrl","uploadFields","test","message","PostData","FormData","append","postDetails","files","CreatePost","setTitle","setBody","padding","reducer","action","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","marginTop","followId","prevState","unfollowId","newFollowers","createContext","Routing","parse","exact","path","UserProfile","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f2a79f9.chunk.js","sourcesContent":["import React, {useContext} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";  // You can use Link instead of anchor tags to prevent frequent refreshing of page on clicking items on page thereby giving rapid injection of components in a single web page application\r\nimport {UserContext} from \"../App\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const{state, dispatch} = useContext(UserContext); // state basically stores the user details like user email etc\r\n\r\n    const history = useHistory();\r\n\r\n    const renderList = () => {\r\n\r\n      if(state)\r\n      {\r\n         return [\r\n          \r\n          <li><Link to=\"/profile\">Profile</Link></li>,\r\n          <li><Link to=\"/create\">Create Post</Link></li>,\r\n          <li>\r\n            <button className=\"btn #64b5f6 #64b5f6 blue lighten-2\" style= {{marginRight: \"15px\"}} \r\n             onClick = {() => {\r\n\r\n              localStorage.clear();\r\n              dispatch({type: \"CLEAR\"});\r\n              history.push(\"/signin\");\r\n\r\n            }}\r\n            >\r\n              Logout\r\n            </button>\r\n          </li>\r\n\r\n         ];\r\n      }\r\n\r\n      else\r\n      {\r\n        return [\r\n            <li><Link to=\"/signin\">Signin</Link></li>,\r\n            <li><Link to=\"/signup\">Signup</Link></li>\r\n        ];\r\n      }\r\n\r\n    }\r\n     \r\n    return(\r\n    <nav>\r\n        <div className=\"nav-wrapper blue\">\r\n          <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">InstaApp</Link>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n            {renderList()}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      );\r\n         \r\n}\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footbar = () => {\r\n\r\n    return(\r\n        \r\n        <footer className=\"page-footer foot #bdbdbd grey lighten-1 brand-logo\">\r\n            <Link to=\"/\"><h1 style= {{margin: \"30px 0px\", textAlign: \"center\"}}>InstaApp</h1></Link>\r\n        </footer>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Footbar;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const {state, dispatch} = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"/allpost\", {\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            \r\n            setData(result.posts);\r\n        });\r\n\r\n    }, [data]);\r\n\r\n    // { stores jsx -> html + js inside curly braces } \r\n\r\n    const likePost = (id) => {\r\n        fetch(\"/like\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n\r\n            const newData =  data.map(item => { // Here newData is a new array through which we are updating the state of data after modifying likes or unlikes\r\n                \r\n                if(item.title == result.title)\r\n                {\r\n                    return result;\r\n                }\r\n                else\r\n                {\r\n                    return item;\r\n                }\r\n\r\n            }); \r\n\r\n            setData(newData);      \r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    const unlikePost = (id) => {\r\n        fetch(\"/unlike\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n\r\n            const newData =  data.map(item => { // Here newData is a new array through which we are updating the state of data after modifying likes or unlikes\r\n                \r\n                if(item.title == result.title)\r\n                {\r\n                    return result;\r\n                }\r\n                else\r\n                {\r\n                    return item;\r\n                }\r\n\r\n                \r\n\r\n            }); \r\n\r\n            setData(newData);      \r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    const makeComment = (text, postId) => {\r\n\r\n        fetch(\"/comment\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:   JSON.stringify({\r\n                postId: postId,\r\n                text: text\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            \r\n            console.log(result);\r\n\r\n            const newData =  data.map(item => { // Here newData is a new array through which we are updating the state of data after modifying likes or unlikes\r\n                \r\n                if(item.title == result.title)\r\n                {\r\n                    return result;\r\n                }\r\n                else\r\n                {\r\n                    return item;\r\n                }\r\n\r\n                \r\n\r\n            }); \r\n\r\n            setData(newData);      \r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result);\r\n\r\n            const newData = data.filter(item => { // This time we are just filtering out data according to the postId which is to be deleted except remaining all to be filtered out in newdata array\r\n               \r\n                return item._id !== result._id;\r\n\r\n            })\r\n\r\n            setData(newData);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        <div className= \"home\">\r\n\r\n            {\r\n                data.map(item => {\r\n                    return(\r\n\r\n                        <div className= \"card home-card\">\r\n                            <h5><Link className=\"hh\" to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id == state._id  &&  <i className=\"material-icons\" style= {{float: \"right\"}} onClick={() => deletePost(item._id)}>delete</i>}</h5>\r\n                \r\n                             <div className= \"card-image\">\r\n                                <img src= {item.photo}/>\r\n                            </div>\r\n\r\n                            <div className= \"card-content\">\r\n                            <i className=\"material-icons\" style= {{color: \"red\"}}>favorite</i>\r\n                            {\r\n                            item.likes.includes(state._id) \r\n                            ?\r\n                            <i className=\"material-icons\" onClick = {() => unlikePost(item._id)}>thumb_down</i>\r\n                            :\r\n                            <i className=\"material-icons\" onClick = {() => likePost(item._id)}>thumb_up</i>\r\n                            }\r\n                            \r\n                            \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight: \"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        );\r\n                                    })\r\n\r\n                                }\r\n\r\n                                <form onSubmit ={(e) => {\r\n                                    e.preventDefault();    // To prevent the refreshing of form while submitting  \r\n                                    makeComment(e.target[0].value, item._id);\r\n                                }}>\r\n\r\n                                <input type= \"text\" placeholder= \"comment\"></input>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    );\r\n                })\r\n\r\n            }\r\n\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useState, useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const [mypics, setPics] = useState([]);\r\n\r\n    const {state, dispatch} = useContext(UserContext);  // While using Context, sometimes you need state or sometimes dispatch or sometimes both\r\n\r\n    useEffect(() => {\r\n        fetch(\"/mypost\", {\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            setPics(result.mypost);\r\n        });\r\n\r\n\r\n    }, []);     // Here [] empty dependency array is used so as to put useEffect come into effect only once the component is loaded or mounted for the first time\r\n\r\n    return(\r\n        \r\n        <div style= {{maxWidth: \"850px\", margin: \"0px auto\"}}>\r\n            \r\n            <div style= {{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-left\",\r\n                margin: \"40px 0px\",\r\n                paddingBottom: \"40px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\", margin: \"0px 100px\"}} src= {state ? state.pic : \"loading...\"}/>\r\n                </div>\r\n\r\n                <div style= {{width: \"300px\"}}>\r\n                    <h4>{state ? state.name : \"loading\"}</h4>\r\n\r\n                    {console.log(state)}\r\n\r\n                    <div style= {{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        <h6>{mypics.length} posts</h6>\r\n                        <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                        <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className= \"gallery\" style= {{marginBottom: \"40px\"}}>\r\n                \r\n                {\r\n                    mypics.map(item => {\r\n\r\n                        return(\r\n                            <img className=\"item\" src = {item.photo} alt = {item.title}/>\r\n                        );\r\n                    })\r\n\r\n                }\r\n                \r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {useState, useContext} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {UserContext} from \"../../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signin = () => {\r\n\r\n    // After UI stuff starts here\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const {state, dispatch} = useContext(UserContext);\r\n\r\n    const SigninData = () => {\r\n\r\n        fetch(\"/signin\", {\r\n            \r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n\r\n            console.log(data);\r\n\r\n            if(data.error)\r\n            {\r\n                M.toast({html: data.error, classes: \"#c62828 red darken-3\"});\r\n            }\r\n\r\n            if(!data.error)\r\n            {\r\n                // Stroring incoming token from backend into local storage\r\n\r\n                localStorage.setItem(\"jwt\", data.token);\r\n\r\n                // You have to strngify the json object data.user before storing it into local storage\r\n\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n\r\n                dispatch({type:\"USER\", payload: data.user});\r\n                \r\n                M.toast({html: \"signedin successfully!\", classes: \"#43a047 green darken-1\"});\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // After UI stuff ends here\r\n\r\n    return(\r\n        <div className= \"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n               \r\n               <h2 className= \"brand-logo\">InstaApp</h2>\r\n               <input type= \"text\" placeholder= \"email\" value = {email} onChange = {e => setEmail(e.target.value)}/>\r\n               <input type= \"password\" placeholder= \"password\" value = {password} onChange = {e => setPassword(e.target.value)}/>\r\n               \r\n               <div className=\"hhh\">\r\n               <button className=\"btn waves-effect waves-light btn1 #2196f3 blue\" onClick = {() => SigninData()}>\r\n                    Login\r\n               </button>\r\n\r\n               <h6 className= \"hhh\">\r\n                   <Link to= \"/signup\" className= \"hh\">Create a new account</Link>\r\n               </h6>\r\n               </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";  // useHistory hook is used to bring user to signin screen after completing with signup part\r\nimport M from \"materialize-css\";\r\n\r\n\r\nconst Signup = () => {\r\n\r\n\r\n    // After UI stuff starts here\r\n\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\");   // Our input text html name tag is in sync with the state\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const[url, setUrl] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        if(url)\r\n        {\r\n            uploadFields();\r\n        }\r\n    },[url]);\r\n\r\n\r\n\r\n    // In fetch() , instead of relative address http://localhost:5000/signup, we can use /signup only if proxy added in package.json\r\n    \r\n\r\n    const postDetails = () => {\r\n\r\n        const data = new FormData();\r\n\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\",\"insta-clone\");\r\n        data.append(\"cloud_name\",\"dvlu66yrx\");\r\n\r\n        // Add image/upload along with api to cloudinary where we provide storage for pics & then get pic url as a response back from cloudinary json response\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/dvlu66yrx/image/upload\", {\r\n\r\n            method: \"post\",\r\n            body: data\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            \r\n            setUrl(data.url);\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const uploadFields = () =>{\r\n\r\n        if(email && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n\r\n            M.toast({html: \"invalid email\", classes: \"#c62828 red darken-3\"});\r\n            return;\r\n        }\r\n\r\n        fetch(\"/signup\", {     // Two arguments used: 1st for API call & 2nd for API details\r\n\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,      // Here first name is key & second name is value from const name of useState\r\n                password: password,\r\n                email: email,\r\n                pic: url\r\n            })\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n\r\n            \r\n            if(data.error)\r\n            {\r\n                M.toast({html: data.error, classes: \"#c62828 red darken-3\"});\r\n            }\r\n\r\n            if(!data.error)\r\n            {\r\n                M.toast({html: data.message, classes: \"#43a047 green darken-1\"});\r\n\r\n                // redirecting user to login page\r\n\r\n                history.push(\"/signin\");\r\n\r\n            }\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n            \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const PostData = () => {    // Network Request\r\n\r\n        // validating email pattern entered\r\n\r\n        if(image)\r\n        {\r\n            postDetails();\r\n        }\r\n        else\r\n        {\r\n            uploadFields();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    // After UI stuff ends here\r\n\r\n\r\n    return(\r\n        <div className= \"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n               \r\n               <h2 className= \"brand-logo\">InstaApp</h2>\r\n               <input type= \"text\" placeholder= \"name\" value = {name} onChange = {(e) => setName(e.target.value)}/>\r\n               <input type= \"text\" placeholder= \"email\" value = {email} onChange = {(e) => setEmail(e.target.value)}/>\r\n               <input type= \"password\" placeholder= \"password\" value = {password} onChange = {(e) => setPassword(e.target.value)}/>\r\n               \r\n\r\n               <div className=\"file-field input-field\">\r\n                    <div className=\"btn #2196f3 blue\">\r\n                        <span>UPLOAD PIC</span>\r\n                        <input type=\"file\" onChange = {e => setImage(e.target.files[0])}/>   \r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n               <button className=\"btn waves-effect waves-light btn1 #2196f3 blue\" onClick = {() => PostData()}>\r\n                    Signup\r\n               </button>\r\n\r\n            \r\n               \r\n                \r\n            </div>\r\n\r\n            <div  className= \"hhh\">\r\n            <h7>\r\n                   <Link to= \"/signin\" className= \"hh\">Already have an account?</Link>\r\n            </h7>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React,{useState, useEffect} from \"react\";\r\nimport M from \"materialize-css\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst CreatePost = () => {\r\n\r\n    // After UI stuff starts here\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        if(url) // Also , useEffect will also kick when components are mounted so as to prevent that this if condition used which specifies that it will kick in only when url is present\r\n        {\r\n\r\n        // Network request to backend\r\n\r\n        fetch(\"/createpost\", {     \r\n\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                title: title,      \r\n                body: body,\r\n                pic: url\r\n            })\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n\r\n            \r\n            if(data.error)\r\n            {\r\n                M.toast({html: data.error, classes: \"#c62828 red darken-3\"});\r\n            }\r\n\r\n            if(!data.error)\r\n            {\r\n                M.toast({html: \"created post successfully!\", classes: \"#43a047 green darken-1\"});\r\n\r\n                history.push(\"/\");\r\n\r\n            }\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    }, [url]);  // Here useEffect is used to bring synchronous effect to app, where firstly one opeartion is performed then it moves to next. [] is a dependency array here which mentions that firslly fetch cloudinary request performed then only move to fetch backend request\r\n\r\n    // useEffect will kick in whenever we update url through setUrl\r\n\r\n    // see vid 24 for more clear understanding on this topic\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const postDetails = () => {\r\n\r\n        const data = new FormData();\r\n\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\",\"insta-clone\");\r\n        data.append(\"cloud_name\",\"dvlu66yrx\");\r\n\r\n        // Add image/upload along with api to cloudinary where we provide storage for pics & then get pic url as a response back from cloudinary json response\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/dvlu66yrx/image/upload\", {\r\n\r\n            method: \"post\",\r\n            body: data\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            \r\n            setUrl(data.url);\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    // After UI stuff ends here\r\n\r\n\r\n    // In e.target.files[0] given below, files is an array where we access only first elemet present at 0th index\r\n\r\n    return(\r\n\r\n        <div className= \"card input-filed\" style= {{margin: \"80px auto\", maxWidth: \"500px\", padding: \"20px\", textAlign: \"center\"}}>\r\n\r\n            <h5>Create a new post</h5>\r\n            <input type= \"text\" placeholder= \"title\" value = {title} onChange = {e => setTitle(e.target.value)}/>\r\n            <input type= \"text\" placeholder= \"body\" value = {body} onChange = {e => setBody(e.target.value)}/>\r\n\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn #2196f3 blue\">\r\n                        <span>UPLOAD IMAGE</span>\r\n                        <input type=\"file\" onChange = {e => setImage(e.target.files[0])}/>   \r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn waves-effect waves-light btn1 #2196f3 blue\" onClick = {() => postDetails()}>\r\n                    SUBMIT POST\r\n                </button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CreatePost;","export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n\r\n    if(action.type == \"USER\")\r\n    {\r\n        return action.payload;\r\n    }\r\n\r\n    if(action.type == \"CLEAR\")\r\n    {\r\n        return null;\r\n    }\r\n\r\n    if(action.type == \"UPDATE\")\r\n    {\r\n        return {\r\n            \r\n            ...state,   // spreading the state\r\n\r\n            followers: action.payload.followers,\r\n            following: action.payload.following\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import React, {useEffect, useState, useContext} from \"react\";\r\nimport {UserContext} from \"../../App\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n\r\n    const [userProfile, setProfile] = useState(null);\r\n\r\n    const {state, dispatch} = useContext(UserContext);  // While using Context, sometimes you need state or sometimes dispatch or sometimes both\r\n\r\n    const {userid} = useParams();\r\n\r\n    const [showfollow, setShowFollow] = useState(state ? state.followers.includes(userid) : true);\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        fetch(`/user/${userid}`, {\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result);\r\n\r\n            \r\n            setProfile(result);\r\n        });\r\n\r\n\r\n    }, []);     // Here [] empty dependency array is used so as to put useEffect come into effect only once the component is loaded or mounted for the first time\r\n\r\n\r\n    \r\n    const followUser = () => {\r\n        \r\n        fetch(\"/follow\", {\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            dispatch({type: \"UPDATE\", payload:{following:data.following, followers: data.followers}});\r\n            localStorage.setItem(\"user\", JSON.stringify(data));\r\n            \r\n\r\n            // This prevState is not context previous state but the setprofile prev state conatining both user and posts objects\r\n\r\n            setProfile(prevState => { // Loading prev state & spreading it then storing it with new data\r\n\r\n                return {    // this below given logic is complicated, form your own logic here\r\n                    \r\n                    ...prevState,  // actually this is a predefined format to update the state given the scenario where prev state is already present & u want to update it ...for that first u have to call prevstate, the things wgich are to be modified ....also have a look upon reducer file\r\n                    user:{...prevState.user,\r\n                    followers:[...prevState.user.followers, data._id] // appending\r\n                }}\r\n            }\r\n            \r\n            )\r\n            setShowFollow(false);\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const unfollowUser = () => {\r\n        \r\n        fetch(\"/unfollow\", {\r\n            method: \"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            dispatch({type: \"UPDATE\", payload:{following:data.following, followers: data.followers}});\r\n            localStorage.setItem(\"user\", JSON.stringify(data));\r\n            \r\n            \r\n            setProfile(prevState => { \r\n\r\n                const newFollowers = prevState.user.followers.filter(item => item != data._id) // creating new followers array filtering and excluding the one who unfollowed\r\n                \r\n                return {    \r\n                    \r\n                    ...prevState,  // actually this is a predefined format to update the state given the scenario where prev state is already present & u want to update it ...for that first u have to call prevstate, the things wgich are to be modified ....also have a look upon reducer file\r\n                    user:{...prevState.user,\r\n                    followers:newFollowers\r\n                }}\r\n            }\r\n            \r\n            )\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return( // Using empty fragments <> to avoid return error \r\n\r\n        <>  \r\n\r\n        {userProfile ?\r\n\r\n                        <div style= {{maxWidth: \"850px\", margin: \"0px auto\"}}>\r\n                                        \r\n                            <div style= {{\r\n                                display: \"flex\",\r\n                                justifyContent: \"flex-left\",\r\n                                margin: \"40px 0px\",\r\n                                paddingBottom: \"40px\",\r\n                                borderBottom: \"1px solid grey\"\r\n                            }}>\r\n                                <div>\r\n                                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\", margin: \"0px 100px\"}} src= {userProfile.user.pic}/>\r\n                                </div>\r\n\r\n                                <div style= {{width: \"300px\"}}>\r\n                                    \r\n                                    <h4>{userProfile.user.name}</h4>\r\n                                    <h5>{userProfile.user.email}</h5>\r\n\r\n                                    <div style= {{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                        <h6>{userProfile.posts.length} posts</h6>\r\n                                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                                        <h6>{userProfile.user.following.length} following</h6>\r\n                                    </div>\r\n\r\n                                    {showfollow ?\r\n                                    <div style={{marginTop:\"15px\"}}>\r\n                                    <button className=\"btn waves-effect waves-light btn1 #2196f3 blue\" onClick = {() => followUser()}>\r\n                                        Follow\r\n                                    </button>\r\n                                    </div>\r\n                                    :\r\n                                    <div style={{marginTop:\"15px\"}}>\r\n                                    <button className=\"btn waves-effect waves-light btn1 #2196f3 blue\" onClick = {() => unfollowUser()}>\r\n                                        Unfollow\r\n                                    </button>\r\n                                    </div>\r\n\r\n                                    }\r\n\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className= \"gallery\" style= {{marginBottom: \"40px\"}}>\r\n                                \r\n                                {\r\n                                    userProfile.posts.map(item => {\r\n\r\n                                        return(\r\n                                            <img className=\"item\" src = {item.photo} alt = {item.title}/>\r\n                                        );\r\n                                    })\r\n\r\n                                }\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n         \r\n        :\r\n        <h2>loading...</h2>\r\n        }\r\n        \r\n        \r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Footbar from \"./components/Footbar\";\nimport \"./App.css\";\nimport {BrowserRouter, Route, Switch, useHistory} from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Profile from \"./components/screens/Profile\";\nimport Signin from \"./components/screens/Signin\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport {reducer, initialState} from \"./reducers/userReducer\";\nimport UserProfile from \"./components/screens/UserProfile\";\n\n\n\n// App.js is the first component which gets loaded therefore it is crucial to maintain the central app level state here\n\n// We are using CONTEXT API here instead of REDUX to maintain centralized app level state.\n\n// Note: We cannot access the history inside BrowserRouter thereby created seperate Routing to use history inside it\n\n// useReducer hook of react can be understood same as the useState hook which re renders components when state is changed but we use useReducer with context.\n\n\n\nexport const UserContext = createContext(); // Initialize the context\n\nconst Routing = () => { // Switch ensures that at one time only one route works\n\n  const history = useHistory();\n\n  const {state, dispatch} = useContext(UserContext);\n\n  useEffect(() => {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n   \n\n\n    if(user)\n    {\n      dispatch({type: \"USER\", payload: user});\n    }\n\n    else\n    {\n      history.push(\"/signin\");\n    }\n\n  }, []); // dependency array is empty here as we want useEffect to kick in when components gets mounted\n\n\n  return(\n\n    <Switch>  \n    \n      <Route exact path= \"/\">\n        <Home/>\n      </Route>\n\n      <Route path= \"/signin\">\n        <Signin/>\n      </Route>\n\n      <Route exact path= \"/profile\">\n        <Profile/>\n      </Route>\n\n      <Route path= \"/signup\">\n        <Signup/>\n      </Route>\n\n      <Route path= \"/create\">\n        <CreatePost/>\n      </Route>\n\n      <Route path= \"/profile/:userid\">\n        <UserProfile/>\n      </Route>\n\n\n    </Switch>\n\n  );\n\n}\n\nfunction App() {\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // We are creating access of state in all Routing components\n\n  // Maybe the destructured state & dispatch of above useReducer hook is injected into the below given keys of UserContext Provider i.e. state: state (from reducer) & value: (from reducer)\n\n  return (\n    \n    <UserContext.Provider value = {{state: state, dispatch: dispatch}}> \n    <BrowserRouter> \n      \n      <Navbar/>\n      <Routing/>\n      <Footbar/>\n\n    </BrowserRouter>\n    </UserContext.Provider>\n   \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}